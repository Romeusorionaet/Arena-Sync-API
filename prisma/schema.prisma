generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum CoresDoCartao {
  VERMELHO
  AMARELO
}

model Atleta {
  id          String  @id @default(uuid())
  nome        String?
  nomePopular String  @map("nome_popular")
  posicao     String?

  cartao               Cartao[]
  gol                  Gol[]
  titular              Titular[]
  reserva              Reserva[]
  entrouEmSubstituicao Substituicao[] @relation("entrouAtleta")
  saiuEmSubstituicao   Substituicao[] @relation("saiuAtleta")

  @@map("atletas")
}

model Time {
  id     String @id @default(uuid())
  nome   String
  sigla  String
  escudo String

  estatisticaDaPartida EstatisticaDaPartida[]
  partidasMandante     Partida[]              @relation("mandanteTime")
  partidasVisitante    Partida[]              @relation("visitanteTime")
  escalacao            Escalacao[]
  substituicao         Substituicao[]

  @@map("times")
}

model Campeonato {
  id          String @id @default(uuid())
  nome        String
  slug        String
  temporada   String @unique
  status      String
  logo        String
  rodadaAtual Int    @map("rodada_atual")

  partida Partida[]

  @@map("Campeonatos")
}

model Partida {
  id                String  @id @default(uuid())
  placar            String?
  status            String
  slug              String
  dataRealizacaoIso String  @map("data_realizacao_iso")
  placarMandante    Int?    @map("placar_mandante")
  placarVisitante   Int?    @map("placar_visitante")
  estadio           String?

  campeonatoId    String     @map("campeonato_id")
  campeonato      Campeonato @relation(fields: [campeonatoId], references: [id])
  timeMandanteId  String     @map("time_mandante_id")
  timeMandante    Time       @relation("mandanteTime", fields: [timeMandanteId], references: [id])
  timeVisitanteId String     @map("time_visitante_id")
  timeVisitante   Time       @relation("visitanteTime", fields: [timeVisitanteId], references: [id])

  estatisticaDaPartida EstatisticaDaPartida[]
  escalacao            Escalacao[]

  @@map("partidas")
}

model EstatisticaDaPartida {
  id           String @id @default(uuid())
  posseDeBola  String @map("posse_de_bola")
  escanteios   Int
  impedimentos Int
  faltas       Int
  defesas      Int
  desarmes     Int

  partidaId String  @map("partida_id")
  partida   Partida @relation(fields: [partidaId], references: [id], onDelete: Cascade)
  timeId    String  @map("time_id")
  time      Time    @relation(fields: [timeId], references: [id], onDelete: Cascade)

  cartao       Cartao[]
  gol          Gol[]
  passe        Passe[]
  finalizacao  Finalizacao[]
  substituicao Substituicao[]

  @@map("estatistica_das_partidas")
}

model Cartao {
  id      String         @id @default(uuid())
  cor     CoresDoCartao?
  minuto  String
  periodo String

  estatisticaDaPartidaId String               @map("estatistica_da_partida")
  estatisticaDaPartida   EstatisticaDaPartida @relation(fields: [estatisticaDaPartidaId], references: [id], onDelete: Cascade)
  atletaId               String?              @map("atleta_id")
  atleta                 Atleta?              @relation(fields: [atletaId], references: [id])

  @@map("cartoes")
}

model Gol {
  id         String  @id @default(uuid())
  minuto     String
  periodo    String
  penalti    Boolean
  gol_contra Boolean

  estatisticaDaPartidaId String               @map("estatistica_da_partida")
  estatisticaDaPartida   EstatisticaDaPartida @relation(fields: [estatisticaDaPartidaId], references: [id], onDelete: Cascade)
  atletaId               String?              @map("atleta_id")
  atleta                 Atleta?              @relation(fields: [atletaId], references: [id])

  @@map("gols")
}

model Passe {
  id        String @id @default(uuid())
  total     Int
  completos Int
  errados   Int
  precisao  String

  estatisticaDaPartidaId String               @map("estatistica_da_partida")
  estatisticaDaPartida   EstatisticaDaPartida @relation(fields: [estatisticaDaPartidaId], references: [id], onDelete: Cascade)

  @@map("passes")
}

model Finalizacao {
  id       String @id @default(uuid())
  total    Int
  noGol    Int    @map("no_gol")
  praFora  Int    @map("pra_fora")
  naTrave  Int    @map("na_trave")
  bloqueio Int
  precisao String

  estatisticaDaPartidaId String               @map("estatistica_da_partida")
  estatisticaDaPartida   EstatisticaDaPartida @relation(fields: [estatisticaDaPartidaId], references: [id], onDelete: Cascade)

  @@map("finalizacoes")
}

model Escalacao {
  id            String @id @default(uuid())
  tecnico       String
  esquemaTatico String @map("esquema_tatico")

  partidaId String  @map("partida_id")
  partida   Partida @relation(fields: [partidaId], references: [id], onDelete: Cascade)
  timeId    String  @map("time_id")
  time      Time    @relation(fields: [timeId], references: [id])

  titular Titular[]
  reserva Reserva[]

  @@map("escalacoes")
}

model Titular {
  id      String  @id @default(uuid())
  posicao String?
  camisa  String

  escalacaoId String    @map("escalacao_id")
  escalacao   Escalacao @relation(fields: [escalacaoId], references: [id], onDelete: Cascade)
  atletaId    String    @map("atleta_id")
  atleta      Atleta    @relation(fields: [atletaId], references: [id], onDelete: Cascade)

  @@map("titulares")
}

model Reserva {
  id      String  @id @default(uuid())
  posicao String?
  camisa  String

  escalacaoId String
  escalacao   Escalacao @relation(fields: [escalacaoId], references: [id], onDelete: Cascade)
  atletaId    String    @map("atleta_id")
  atleta      Atleta    @relation(fields: [atletaId], references: [id], onDelete: Cascade)

  @@map("reservas")
}

model Substituicao {
  id      String  @id @default(uuid())
  periodo String
  minuto  String?

  estatisticaDaPartidaId String
  estatisticaDaPartida   EstatisticaDaPartida @relation(fields: [estatisticaDaPartidaId], references: [id], onDelete: Cascade)
  timeId                 String               @map("time_id")
  time                   Time                 @relation(fields: [timeId], references: [id])
  entrouAtletaId         String
  entrouAtleta           Atleta               @relation("entrouAtleta", fields: [entrouAtletaId], references: [id])
  saiuAtletaId           String
  saiuAtleta             Atleta               @relation("saiuAtleta", fields: [saiuAtletaId], references: [id])

  @@map("substituicoes")
}
